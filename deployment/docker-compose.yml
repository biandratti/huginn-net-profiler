services:
  # Traefik Frontend - TLS Termination (facing internet)
  traefik-frontend:
    image: traefik:v3.0
    container_name: traefik-frontend
    command:
      # Global configuration
      - "--log.level=INFO"
      - "--api.dashboard=true"
      # Providers - only look for frontend labels
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.constraints=Label(`traefik.scope`,`frontend`)"
      - "--providers.file.directory=/etc/traefik/dynamic"
      - "--providers.file.watch=true"
      # Entrypoints
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      # HTTP/2 configuration for public TLS
      - "--entrypoints.websecure.http2.maxconcurrentstreams=250"
      # HTTP->HTTPS Redirection
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      # Certificate Resolver (Let's Encrypt)
      - "--certificatesresolvers.letsencrypt.acme.email=maxibiandra@gmail.com"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./letsencrypt:/letsencrypt
      - ./traefik.yml:/etc/traefik/dynamic/traefik.yml:ro
    restart: always
    network_mode: host
    labels:
      - "traefik.enable=true"
      - "traefik.scope=frontend"
      # Route HTTPS traffic to backend Traefik (HTTP)
      - "traefik.http.routers.frontend-app.rule=Host(`huginn-net.duckdns.org`)"
      - "traefik.http.routers.frontend-app.entrypoints=websecure"
      - "traefik.http.routers.frontend-app.service=backend-traefik"
      # TLS configuration
      - "traefik.http.routers.frontend-app.tls=true"
      - "traefik.http.routers.frontend-app.tls.certresolver=letsencrypt"
      - "traefik.http.routers.frontend-app.tls.options=my-tls-options@file"
      # Service points to backend Traefik
      - "traefik.http.services.backend-traefik.loadbalancer.server.port=8081"
      - "traefik.http.services.backend-traefik.loadbalancer.server.scheme=http"
      # Dashboard
      - "traefik.http.routers.frontend-dashboard.rule=Host(`huginn-net.duckdns.org`) && PathPrefix(`/dashboard`)"
      - "traefik.http.routers.frontend-dashboard.service=api@internal"
      - "traefik.http.routers.frontend-dashboard.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users=admin:$$apr1$$t4i5g2g3$$PklPBOaW8F8aJzsvM4pSg."
      - "traefik.http.routers.frontend-dashboard.tls.certresolver=letsencrypt"
      - "traefik.http.routers.frontend-dashboard.tls.options=my-tls-options@file"

  # Traefik Backend - HTTP Analysis (receives decrypted traffic)
  traefik-backend:
    image: traefik:v3.0
    container_name: traefik-backend
    command:
      # Global configuration
      - "--log.level=DEBUG"
      - "--api.dashboard=false"
      # Providers - only look for backend labels
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.constraints=Label(`traefik.scope`,`backend`)"
      # Entrypoint for HTTP traffic from frontend
      - "--entrypoints.http-backend.address=:8081"
      # Access logging for HTTP analysis
      - "--accesslog=true"
      - "--accesslog.format=json"
    ports:
      - "8081:8081"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: always
    network_mode: host
    labels:
      - "traefik.enable=true"
      - "traefik.scope=backend"
      # Route HTTP traffic to Huginn app
      - "traefik.http.routers.backend-app.rule=PathPrefix(`/`)"
      - "traefik.http.routers.backend-app.entrypoints=http-backend"
      - "traefik.http.routers.backend-app.service=huginn-app"
      # Service points to Huginn
      - "traefik.http.services.huginn-app.loadbalancer.server.port=3000"
      - "traefik.http.services.huginn-app.loadbalancer.server.scheme=http"

  huginn:
    build:
      context: ..
      dockerfile: deployment/Dockerfile
    container_name: huginn
    command:
      - "/app/huginn-api"
      - "--interface"
      - "ens4"  # Primary network interface - will see HTTP traffic from backend Traefik
      - "--bind"
      - "127.0.0.1:3000"
      - "--ja4-database"
      - "/app/ja4_database.json"
    privileged: true  # Required for packet capture
    restart: always
    volumes:
      - ./ja4_database.json:/app/ja4_database.json:ro
    depends_on:
      - traefik-frontend
      - traefik-backend
    network_mode: host  # Host mode for network capture access
    labels:
      - "traefik.enable=false"  # Managed by backend Traefik
