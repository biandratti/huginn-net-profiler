version: '3.8'

services:
  traefik:
    image: traefik:v2.10
    container_name: traefik
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik.yml:/etc/traefik/traefik.yml:ro
      - ./letsencrypt:/letsencrypt
      - ./deployment/dynamic:/etc/traefik/dynamic
    networks:
      - huginn-net

  frontend:
    image: nginx:alpine
    container_name: frontend
    restart: unless-stopped
    volumes:
      - ./static:/usr/share/nginx/html
    networks:
      - huginn-net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`localhost`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls=true"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"

  profile-assembler:
    build:
      context: .
      dockerfile: ./profiler/profile-assembler/Dockerfile
    container_name: profile-assembler
    restart: unless-stopped
    networks:
      - huginn-net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`localhost`) && PathPrefix(`/api`)"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls=true"
      - "traefik.http.services.api.loadbalancer.server.port=8000"

  tls-collector:
    build:
      context: .
      dockerfile: ./profiler/tls-collector/Dockerfile
    container_name: tls-collector
    restart: unless-stopped
    network_mode: "host"
    privileged: true
    environment:
      - INTERFACE_NAME=wlp0s20f3
      - ASSEMBLER_ENDPOINT=http://localhost:8000/api/ingest/tls
      - RUST_LOG=info

  http-collector:
    build:
      context: .
      dockerfile: ./profiler/http-collector/Dockerfile
    container_name: http-collector
    restart: unless-stopped
    network_mode: "host"
    privileged: true
    environment:
      - INTERFACE_NAME=wlp0s20f3
      - ASSEMBLER_ENDPOINT=http://localhost:8000/api/ingest
      - RUST_LOG=info

networks:
  huginn-net:
    driver: bridge 